package interfaces;

import java.sql.ResultSet;
import BANCODEDADOS.ConexaoDAO;
import java.awt.Image;
import java.io.FileInputStream;
import java.sql.SQLException;

import java.sql.Connection;
import javax.swing.JOptionPane;
import java.sql.PreparedStatement;
import java.util.Calendar;
import java.util.Date;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author Adriano
 */
public class InserirConta extends javax.swing.JFrame {

    /**
     * Creates new form Tabela_Contas
     */
    private FileInputStream fis;

    private int tamanho;

    public InserirConta() {
        setResizable(false);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Nome = new javax.swing.JTextField();
        Nome1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        InserirConta = new javax.swing.JButton();
        Nome2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        Dia = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        Mes = new javax.swing.JTextField();
        Ano = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        CPF = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        Email = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        Senha = new javax.swing.JPasswordField();
        jLabel11 = new javax.swing.JLabel();
        tipoConta = new javax.swing.JComboBox<>();
        carregarFoto = new javax.swing.JButton();
        lblFoto = new javax.swing.JLabel();

        Nome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NomeActionPerformed(evt);
            }
        });

        Nome1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Nome1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Nome completo:");

        jLabel4.setText("Data de Nascimento:");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Contas Registradas"));

        InserirConta.setText("Inserir Conta");
        InserirConta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InserirContaActionPerformed(evt);
            }
        });

        Nome2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Nome2ActionPerformed(evt);
            }
        });

        jLabel3.setText("Nome completo:");

        jLabel5.setText("Data de Nascimento:");

        Dia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DiaActionPerformed(evt);
            }
        });

        jLabel9.setText("/");

        Mes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MesActionPerformed(evt);
            }
        });

        Ano.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnoActionPerformed(evt);
            }
        });

        jLabel12.setText("/");

        jLabel6.setText("CPF:");

        CPF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CPFActionPerformed(evt);
            }
        });

        jLabel7.setText("Email:");

        Email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmailActionPerformed(evt);
            }
        });

        jLabel8.setText("Senha:");

        Senha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SenhaActionPerformed(evt);
            }
        });

        jLabel11.setText("Tipo de Conta:");

        tipoConta.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Usuário", "Funcionário" }));
        tipoConta.setToolTipText("");
        tipoConta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipoContaActionPerformed(evt);
            }
        });

        carregarFoto.setText("Enviar Foto de Perfil");
        carregarFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carregarFotoActionPerformed(evt);
            }
        });

        lblFoto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFoto.setText("FOTO (OPCIONAL)");
        lblFoto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(CPF, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(59, 59, 59)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(Senha, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(tipoConta, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Email, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)))
                    .addComponent(jLabel5)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Dia, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Mes, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Ano, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3)
                    .addComponent(Nome2, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 84, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(carregarFoto))
                .addGap(53, 53, 53))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(294, 294, 294)
                .addComponent(InserirConta)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(lblFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(carregarFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Nome2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Dia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Mes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12)
                                    .addComponent(Ano, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel11))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(CPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tipoConta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Senha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                        .addComponent(InserirConta)
                        .addGap(39, 39, 39))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void InserirContaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InserirContaActionPerformed
         String nome = Nome2.getText();
    String diaText = Dia.getText();
    String mesText = Mes.getText();
    String anoText = Ano.getText();
    String cpf = CPF.getText();
    String email = Email.getText();
    String senha = new String(Senha.getPassword());
    String tipoSelecionado = (String) tipoConta.getSelectedItem();

    // Verificar se todos os campos obrigatórios foram preenchidos
    if (nome.isEmpty() || diaText.isEmpty() || mesText.isEmpty() || anoText.isEmpty()
            || cpf.isEmpty() || email.isEmpty() || senha.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Por favor, preencha todos os campos obrigatórios.", "Erro", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Validar data de nascimento
    if (!diaText.matches("\\d{1,2}") || !mesText.matches("\\d{1,2}") || !anoText.matches("\\d{4}")) {
        JOptionPane.showMessageDialog(this, "Data de nascimento inválida. Insira uma data válida.", "Erro", JOptionPane.ERROR_MESSAGE);
        return;
    }

    int dia = Integer.parseInt(diaText);
    int mes = Integer.parseInt(mesText);
    int ano = Integer.parseInt(anoText);

    Calendar dataNascimento = Calendar.getInstance();
    dataNascimento.setLenient(false);
    dataNascimento.set(ano, mes - 1, dia); // Mês começa em zero no Calendar

    try {
        dataNascimento.getTime(); // Verificar se a data é válida

        // Calcular idade
        Calendar dataAtual = Calendar.getInstance();
        int idade = dataAtual.get(Calendar.YEAR) - dataNascimento.get(Calendar.YEAR);
        if (dataAtual.get(Calendar.MONTH) < dataNascimento.get(Calendar.MONTH)
                || (dataAtual.get(Calendar.MONTH) == dataNascimento.get(Calendar.MONTH)
                && dataAtual.get(Calendar.DAY_OF_MONTH) < dataNascimento.get(Calendar.DAY_OF_MONTH))) {
            idade--; // Ainda não fez aniversário no ano corrente
        }

        Connection conn = ConexaoDAO.conectaBD();

        // Inserir dados na tabela usuarios
        String sqlUsuarios = "INSERT INTO usuarios (nome_completo, data_nascimento, cpf, email, senha, tipo_conta, idade) VALUES (?, ?, ?, ?, ?, ?, ?)";
        PreparedStatement pstmUsuarios = conn.prepareStatement(sqlUsuarios);
        pstmUsuarios.setString(1, nome);
        pstmUsuarios.setDate(2, new java.sql.Date(dataNascimento.getTimeInMillis()));
        pstmUsuarios.setString(3, cpf);
        pstmUsuarios.setString(4, email);
        pstmUsuarios.setString(5, senha);
        pstmUsuarios.setString(6, tipoSelecionado);
        pstmUsuarios.setInt(7, idade);
        pstmUsuarios.executeUpdate();

        // Inserir dados na tabela autenticadoruser
        String sqlAutenticadorUser = "INSERT INTO autenticadoruser (email_user, senha_user) VALUES (?, ?)";
        PreparedStatement pstmAutenticadorUser = conn.prepareStatement(sqlAutenticadorUser);
        pstmAutenticadorUser.setString(1, email);
        pstmAutenticadorUser.setString(2, senha);
        pstmAutenticadorUser.executeUpdate();

        JOptionPane.showMessageDialog(null, "Inserido corretamente");

        // Abrir a tela de TabelaContas
        TabelaConta telaConta = new TabelaConta();
        telaConta.setVisible(true);

        // Fechar a tela de cadastro
        dispose();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Erro ao realizar o cadastro: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        return;
    }

    }//GEN-LAST:event_InserirContaActionPerformed

    private void NomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NomeActionPerformed

    private void Nome1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Nome1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Nome1ActionPerformed

    private void Nome2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Nome2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Nome2ActionPerformed

    private void DiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DiaActionPerformed
        String diaText = Dia.getText();

        // Verifica se o campo de dia contém apenas números e tem no máximo 2 dígitos
        if (!diaText.matches("\\d{1,2}")) {
            JOptionPane.showMessageDialog(null, "Valor inválido para o dia. Insira um número válido.", "Erro", JOptionPane.ERROR_MESSAGE);
            Dia.setText(""); // Limpa o campo Campo_Dia
        }
    }//GEN-LAST:event_DiaActionPerformed

    private void MesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MesActionPerformed
        String mesText = Mes.getText();

        // Verifica se o campo de mês contém apenas números e tem no máximo 2 dígitos
        if (!mesText.matches("\\d{1,2}")) {
            JOptionPane.showMessageDialog(null, "Valor inválido para o mês. Insira um número válido.", "Erro", JOptionPane.ERROR_MESSAGE);
            Mes.setText(""); // Limpa o campo Campo_Mes
        }
    }//GEN-LAST:event_MesActionPerformed

    private void AnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnoActionPerformed
        // Obtém o ano informado no campo Campo_Ano
        int ano = Integer.parseInt(Ano.getText());

        // Obtém a data atual
        Calendar dataAtual = Calendar.getInstance();

        // Define o limite de idade permitido
        Calendar limiteIdade = Calendar.getInstance();
        limiteIdade.add(Calendar.YEAR, -120);

        // Verifica se a diferença entre o ano informado e a data atual é maior que 120 anos
        if (dataAtual.get(Calendar.YEAR) - ano > 120) {
            JOptionPane.showMessageDialog(null, "Idade inválida. A idade não pode ser superior a 120 anos.", "Erro", JOptionPane.ERROR_MESSAGE);
            Ano.setText(""); // Limpa o campo Campo_Ano
        }
    }//GEN-LAST:event_AnoActionPerformed

    private void CPFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CPFActionPerformed
        //Validar CPF
        String cpf = CPF.getText();

        // Remover caracteres não numéricos do CPF
        cpf = cpf.replaceAll("[^0-9]", "");

        // Verificar se o CPF tem 11 dígitos
        if (cpf.length() != 11) {
            // CPF inválido
            JOptionPane.showMessageDialog(null, "CPF inválido. Por favor, insira um CPF válido.", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Verificar se todos os dígitos são iguais
        boolean digitosIguais = true;
        for (int i = 1; i < 11; i++) {
            if (cpf.charAt(i) != cpf.charAt(0)) {
                digitosIguais = false;
                break;
            }
        }
        if (digitosIguais) {
            // CPF inválido
            JOptionPane.showMessageDialog(null, "CPF inválido. Por favor, insira um CPF válido.", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Calcular o primeiro dígito verificador
        int soma = 0;
        for (int i = 0; i < 9; i++) {
            soma += (cpf.charAt(i) - '0') * (10 - i);
        }
        int digito1 = 11 - (soma % 11);
        if (digito1 > 9) {
            digito1 = 0;
        }

        // Calcular o segundo dígito verificador
        soma = 0;
        for (int i = 0; i < 10; i++) {
            soma += (cpf.charAt(i) - '0') * (11 - i);
        }
        int digito2 = 11 - (soma % 11);
        if (digito2 > 9) {
            digito2 = 0;
        }

        // Verificar se os dígitos verificadores estão corretos
        if (digito1 == (cpf.charAt(9) - '0') && digito2 == (cpf.charAt(10) - '0')) {
            // CPF válido
            // Faça o que precisa ser feito
        } else {
            // CPF inválido
            JOptionPane.showMessageDialog(null, "CPF inválido. Por favor, insira um CPF válido.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_CPFActionPerformed

    private void EmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmailActionPerformed
        String email = Email.getText();
        String regex = "^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$";
        Pattern pattern = Pattern.compile(regex);
        Matcher matcher = pattern.matcher(email);
        boolean isEmailValid = matcher.matches();

        if (!isEmailValid) {
            JOptionPane.showMessageDialog(null, "O e-mail fornecido é inválido.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_EmailActionPerformed

    private void SenhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SenhaActionPerformed
        String senha = Senha.getText();

        // Verifica se a senha está vazia
        if (senha.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Campo de senha vazio. Por favor, insira uma senha.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_SenhaActionPerformed

    private void tipoContaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipoContaActionPerformed
        JComboBox comboBox = (JComboBox) evt.getSource();
        String selectedItem = (String) comboBox.getSelectedItem();

        if (selectedItem.equals("Funcionário")) {
            String fraseMagica = JOptionPane.showInputDialog("Insira a frase mágica para funcionário:");

            if (fraseMagica.equals("junindograu")) {
                // Ações para funcionário
                JOptionPane.showMessageDialog(null, "Bem-vindo, funcionário!");
                // Execute as ações apropriadas para funcionário
            } else {
                // Exiba mensagem de erro
                JOptionPane.showMessageDialog(null, "Frase mágica inválida para funcionário", "Erro", JOptionPane.ERROR_MESSAGE);
                comboBox.setSelectedItem("Usuário"); // Volta para a opção "Usuário"
            }
        } else if (selectedItem.equals("Usuário")) {
            // Ações para usuário
            JOptionPane.showMessageDialog(null, "Olá, usuário!");
            // Execute as ações apropriadas para usuário
        }
    }//GEN-LAST:event_tipoContaActionPerformed

    private void carregarFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carregarFotoActionPerformed

        JFileChooser jfc = new JFileChooser();
        jfc.setDialogTitle("Selecionar arquivo");
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Imagens", "jpg", "jpeg", "png");
        jfc.setFileFilter(filter);

        int result = jfc.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            try {
                fis = new FileInputStream(jfc.getSelectedFile());
                tamanho = (int) jfc.getSelectedFile().length();
                Image foto = ImageIO.read(jfc.getSelectedFile()).getScaledInstance(lblFoto.getWidth(), lblFoto.getHeight(), Image.SCALE_SMOOTH);
                lblFoto.setIcon(new ImageIcon(foto));
                lblFoto.updateUI();

            } catch (Exception e) {
                System.out.println(e);
            }

        }
    }//GEN-LAST:event_carregarFotoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InserirConta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InserirConta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InserirConta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InserirConta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InserirConta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Ano;
    private javax.swing.JTextField CPF;
    private javax.swing.JTextField Dia;
    private javax.swing.JTextField Email;
    private javax.swing.JButton InserirConta;
    private javax.swing.JTextField Mes;
    private javax.swing.JTextField Nome;
    private javax.swing.JTextField Nome1;
    private javax.swing.JTextField Nome2;
    private javax.swing.JPasswordField Senha;
    private javax.swing.JButton carregarFoto;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblFoto;
    private javax.swing.JComboBox<String> tipoConta;
    // End of variables declaration//GEN-END:variables
}
